version: '3'

# Networking
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

# Storage Volumes
volumes:
  # Caddy
  caddy_data:
  caddy_config:
  # Node
  node_app:
  # Vault
  vault:

# Docker Services
services:
  # Fluent-Bit (Logging)
  fluent-bit:
    build:
      context: './docker/fluent-bit'
    restart: unless-stopped
    ports:
      - '2020:2020'
      - '24224:24224'
      - '24224:24224/udp'
    networks:
      - backend

  # Prometheus (Time Series DB)
  prometheus:
    build:
      context: './docker/prometheus'
    restart: unless-stopped
    ports:
      - '9090:9090'
    networks:
      - frontend
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: prometheus

  # Grafana (Dashboards)
  grafana:
    build:
      context: './docker/grafana'
    restart: unless-stopped
    ports:
      - '3001:3000'
    networks:
      - frontend
      - backend
    depends_on:
      - fluent-bit
      - prometheus
    logging:
      driver: 'fluentd'
      options:
        tag: grafana

  # Caddy (Proxy)
  caddy:
    build:
      context: './docker/caddy'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/caddy/config/Caddyfile:/etc/caddy/Caddyfile
      - ./build:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - frontend
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: caddy

  # Vault
  vault:
    build:
      context: './docker/vault'
    restart: unless-stopped
    ports:
      - '8200:8200'
    volumes:
      - vault:/vault
    networks:
      - frontend
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: vault

  # Node (JS Engine)
  node:
    build:
      context: .
    restart: unless-stopped
    volumes:
      - node_app:/usr/src/app
    networks:
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: node
