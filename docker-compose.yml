version: '3'

# Networking
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  logging:
    driver: bridge

# Storage Volumes
volumes:
  # Caddy
  caddy_data:
  caddy_config:
  # Node
  node_app:
  # Vault
  vault_file:
  vault_logs:
  # Redis
  redis_data:
  # RabbitMQ
  rabbitmq_mnesia:
  # TimescaleDB
  timescaledb_data:

# Docker Services
services:
  # Fluent-Bit (Logging)
  fluent-bit:
    build:
      context: './docker/fluent-bit'
    restart: unless-stopped
    ports:
      - '2020:2020'
      - '24224:24224'
      - '24224:24224/udp'
    networks:
      - backend
      - logging

  # Prometheus (Time Series DB)
  prometheus:
    build:
      context: './docker/prometheus'
    restart: unless-stopped
    ports:
      - '9090:9090'
      - '9092:9092'
    volumes:
      - prometheus_data:/prometheus
    networks:
      - frontend
      - backend
      - logging
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: prometheus

  # Grafana (Dashboards)
  grafana:
    build:
      context: './docker/grafana'
    restart: unless-stopped
    ports:
      - '3001:3000'
    networks:
      - frontend
      - backend
      - logging
    depends_on:
      - fluent-bit
      - prometheus
    logging:
      driver: 'fluentd'
      options:
        tag: grafana

  # Caddy (Proxy)
  caddy:
    build:
      context: './docker/caddy'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/caddy/config/Caddyfile:/etc/caddy/Caddyfile
      - ./build:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - frontend
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: caddy

  # Vault
  vault:
    build:
      context: './docker/vault'
    restart: unless-stopped
    ports:
      - '8200:8200'
    volumes:
      - vault_file:/vault/file
      - vault_logs:/vault/logs
    networks:
      - frontend
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: vault

  # Node (JS Engine)
  node:
    build:
      context: .
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - node_app:/usr/src/app
    networks:
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: node

  # Redis (Caching)
  redis:
    build:
      context: './docker/redis'
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: redis

  # RabbitMQ (Message Broker)
  rabbitmq:
    build:
      context: './docker/rabbitmq'
    restart: unless-stopped
    volumes:
      - rabbitmq_mnesia:/var/lib/rabbitmq
    ports:
      - '15672:15672'
    networks:
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: rabbitmq

  # TimescaleDB (Time Series DB)
  timescaledb:
    build:
      context: './docker/timescaledb'
    restart: unless-stopped
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - backend
    depends_on:
      - fluent-bit
    logging:
      driver: 'fluentd'
      options:
        tag: timescaledb
